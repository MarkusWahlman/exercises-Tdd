{"version":3,"file":"index-rg4VwrqW.js","sources":["../../src/Tetromino.ts","../../src/FallingTetromino.ts","../../src/Board.ts","../../src/ScoringSystem.ts","../../src/ShuffleBag.ts","../../src/index.ts","../../src/index.html?html-proxy&index=2.js"],"sourcesContent":["export class Tetromino {\n  rotationStates: string[] = [];\n  rotationIndex: number;\n\n  static get I_SHAPE() {\n    return new ITetromino();\n  }\n\n  static get T_SHAPE() {\n    return new TTetromino();\n  }\n\n  static get L_SHAPE() {\n    return new LTetromino();\n  }\n\n  static get J_SHAPE() {\n    return new JTetromino();\n  }\n\n  static get S_SHAPE() {\n    return new STetromino();\n  }\n\n  static get Z_SHAPE() {\n    return new ZTetromino();\n  }\n\n  static get O_SHAPE() {\n    return new OTetromino();\n  }\n\n  grid: string[][];\n\n  constructor(grid: string[][], rotationIndex = 0) {\n    this.grid = grid;\n    this.rotationIndex = rotationIndex;\n\n    if ((this.constructor as any).rotationStates) {\n      this.rotationStates = (this.constructor as any).rotationStates;\n    }\n  }\n\n  static fromString(shape: string): Tetromino {\n    const grid = shape\n      .trim()\n      .split(\"\\n\")\n      .map((row) => row.trim().split(\"\"));\n\n    return new Tetromino(grid);\n  }\n\n  toString(): string {\n    return this.grid.map((row) => row.join(\"\")).join(\"\\n\") + \"\\n\";\n  }\n\n  rotateRight() {\n    const newRotationIndex = (this.rotationIndex + 1) % (this.constructor as any).rotationStates.length;\n    return new (this.constructor as any)(newRotationIndex);\n  }\n\n  rotateLeft() {\n    const newRotationIndex =\n      (this.rotationIndex + (this.constructor as any).rotationStates.length - 1) %\n      (this.constructor as any).rotationStates.length;\n\n    return new (this.constructor as any)(newRotationIndex);\n  }\n}\n\nexport class ITetromino extends Tetromino {\n  static rotationStates = [\n    `.....\n     IIII.\n     .....\n     .....\n     .....`,\n\n    `...I.\n     ...I.\n     ...I.\n     ...I.\n     .....`,\n  ];\n\n  constructor(rotationIndex = 0) {\n    super(Tetromino.fromString(ITetromino.rotationStates[rotationIndex]).grid, rotationIndex);\n  }\n}\n\nexport class TTetromino extends Tetromino {\n  static rotationStates = [\n    `...\n     TTT\n     .T.`,\n\n    `.T.\n     TT.\n     .T.`,\n\n    `...\n     .T.\n     TTT`,\n\n    `.T.\n     .TT\n     .T.`,\n  ];\n\n  constructor(rotationIndex = 0) {\n    super(Tetromino.fromString(TTetromino.rotationStates[rotationIndex]).grid, rotationIndex);\n  }\n}\n\nexport class LTetromino extends Tetromino {\n  static rotationStates = [\n    `...\n     LLL\n     L..`,\n\n    `LL.\n     .L.\n     .L.`,\n\n    `...\n     ..L\n     LLL`,\n\n    `.L.\n     .L.\n     .LL`,\n  ];\n\n  constructor(rotationIndex = 0) {\n    super(Tetromino.fromString(LTetromino.rotationStates[rotationIndex]).grid, rotationIndex);\n  }\n}\n\nexport class JTetromino extends Tetromino {\n  static rotationStates = [\n    `...\n     JJJ\n     ..J`,\n\n    `.J.\n     .J.\n     JJ.`,\n\n    `...\n     J..\n     JJJ`,\n\n    `.JJ\n     .J.\n     .J.`,\n  ];\n\n  constructor(rotationIndex = 0) {\n    super(Tetromino.fromString(JTetromino.rotationStates[rotationIndex]).grid, rotationIndex);\n  }\n}\n\nexport class STetromino extends Tetromino {\n  static rotationStates = [\n    `...\n     .SS\n     SS.`,\n\n    `S..\n     SS.\n     .S..`,\n\n    `...\n     .SS\n     SS.`,\n\n    `S..\n     SS.\n     .S.`,\n  ];\n\n  constructor(rotationIndex = 0) {\n    super(Tetromino.fromString(STetromino.rotationStates[rotationIndex]).grid, rotationIndex);\n  }\n}\n\nexport class ZTetromino extends Tetromino {\n  static rotationStates = [\n    `...\n     ZZ.\n     .ZZ`,\n\n    `..Z\n     .ZZ\n     .Z.`,\n\n    `...\n     ZZ.\n     .ZZ`,\n\n    `.Z.\n     ZZ.\n     Z..`,\n  ];\n\n  constructor(rotationIndex = 0) {\n    super(Tetromino.fromString(ZTetromino.rotationStates[rotationIndex]).grid, rotationIndex);\n  }\n}\n\nexport class OTetromino extends Tetromino {\n  constructor() {\n    super(\n      Tetromino.fromString(\n        `...\n         .OO\n         .OO`\n      ).grid\n    );\n  }\n\n  rotateRight(): OTetromino {\n    return this;\n  }\n\n  rotateLeft(): OTetromino {\n    return this;\n  }\n}\n","import { Board } from \"./Board.js\";\r\nimport { Tetromino } from \"./Tetromino.js\";\r\n\r\nexport class FallingTetromino {\r\n  board: Board;\r\n  columnPos: number;\r\n  rowPos: number;\r\n  tetromino: Tetromino;\r\n  isFalling: boolean;\r\n\r\n  constructor(board: Board, tetromino: Tetromino | string) {\r\n    this.board = board;\r\n    this.isFalling = true;\r\n\r\n    this.tetromino = tetromino instanceof Tetromino ? tetromino : Tetromino.fromString(tetromino);\r\n\r\n    const maxWidth = this.tetromino.grid[0].length;\r\n    this.rowPos = Math.floor((board.width - maxWidth) / 2);\r\n    this.columnPos = 0;\r\n\r\n    for (let y = 0; y < this.tetromino.grid.length; y++) {\r\n      for (let x = 0; x < this.tetromino.grid[y].length; x++) {\r\n        this.board.grid[this.columnPos + y][this.rowPos + x] = this.tetromino.grid[y][x];\r\n      }\r\n    }\r\n  }\r\n\r\n  private reDraw(newTetromino: Tetromino): boolean {\r\n    const oldTetromino = this.tetromino;\r\n\r\n    const commonPositions: [number, number][] = [];\r\n    for (let y = 0; y < oldTetromino.grid.length; y++) {\r\n      for (let x = 0; x < oldTetromino.grid[y].length; x++) {\r\n        if (newTetromino.grid[y][x] !== \".\" && oldTetromino.grid[y][x] !== \".\") {\r\n          commonPositions.push([y, x]);\r\n        }\r\n      }\r\n    }\r\n\r\n    this.tetromino = newTetromino;\r\n    if (!this.canBeMoved(0, 0, commonPositions)) {\r\n      this.tetromino = oldTetromino;\r\n      return false;\r\n    }\r\n\r\n    this.drawNewTetromino(0, 0, oldTetromino);\r\n    return true;\r\n  }\r\n\r\n  private canBeMoved(deltaColumn: number, deltaRow: number, ignoreList: [number, number][] = []): boolean {\r\n    // Go through all of the blocks and check if we can move them\r\n    let canMove = true;\r\n    const newColumnPos = this.columnPos + deltaColumn;\r\n    const newRowPos = this.rowPos + deltaRow;\r\n    const rowDirection = deltaRow === 0 ? 1 : Math.sign(deltaRow);\r\n\r\n    for (let y = 0; y < this.tetromino.grid.length; y++) {\r\n      for (let x = 0; x < this.tetromino.grid[y].length; x++) {\r\n        if (ignoreList.some(([cy, cx]) => cy === y && cx === x)) {\r\n          continue;\r\n        }\r\n\r\n        const curBlock = this.tetromino.grid[y][x];\r\n        if (curBlock === \".\") {\r\n          continue;\r\n        }\r\n\r\n        if (newColumnPos + y >= this.board.height) {\r\n          canMove = false;\r\n          break;\r\n        }\r\n\r\n        if (newRowPos + x >= this.board.width || newRowPos + x < 0) {\r\n          canMove = false;\r\n          break;\r\n        }\r\n\r\n        if (deltaColumn !== 0) {\r\n          if (y < this.tetromino.grid.length - 1 && this.tetromino.grid[y + 1][x] !== \".\") {\r\n            continue;\r\n          }\r\n        }\r\n\r\n        if (deltaRow !== 0) {\r\n          if (this.tetromino.grid[y][x + rowDirection] && this.tetromino.grid[y][x + rowDirection] !== \".\") {\r\n            continue;\r\n          }\r\n        }\r\n\r\n        if (this.board.grid[newColumnPos + y][newRowPos + x] !== \".\") {\r\n          canMove = false;\r\n          break;\r\n        }\r\n      }\r\n      if (!canMove) {\r\n        break;\r\n      }\r\n    }\r\n\r\n    if (!canMove) {\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  drawNewTetromino(deltaColumn: number, deltaRow: number, oldTetromino?: Tetromino) {\r\n    const newColumnPos = this.columnPos + deltaColumn;\r\n    const newRowPos = this.rowPos + deltaRow;\r\n    const rowDirection = deltaRow === 0 ? 1 : Math.sign(deltaRow);\r\n\r\n    for (let y = this.tetromino.grid.length - 1; y >= 0; y--) {\r\n      for (let x2 = 0; x2 < this.tetromino.grid[y].length; x2++) {\r\n        const x = rowDirection === -1 ? x2 : this.tetromino.grid[y].length - 1 - x2;\r\n        if (oldTetromino) {\r\n          if (oldTetromino.grid[y][x] !== \".\") {\r\n            this.board.grid[this.columnPos + y][this.rowPos + x] = \".\";\r\n          }\r\n        }\r\n\r\n        if (this.tetromino.grid[y][x] !== \".\") {\r\n          this.board.grid[this.columnPos + y][this.rowPos + x] = \".\";\r\n          this.board.grid[newColumnPos + y][newRowPos + x] = this.tetromino.grid[y][x];\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  moveBy(deltaColumn: number, deltaRow: number): boolean {\r\n    const canMove = this.canBeMoved(deltaColumn, deltaRow);\r\n\r\n    if (!canMove) {\r\n      return false;\r\n    }\r\n\r\n    this.drawNewTetromino(deltaColumn, deltaRow);\r\n\r\n    this.columnPos = this.columnPos + deltaColumn;\r\n    this.rowPos = this.rowPos + deltaRow;\r\n    return true;\r\n  }\r\n\r\n  moveDown() {\r\n    if (!this.isFalling) {\r\n      return;\r\n    }\r\n\r\n    if (!this.moveBy(1, 0)) {\r\n      this.isFalling = false;\r\n    }\r\n  }\r\n\r\n  moveLeft() {\r\n    if (!this.isFalling) {\r\n      return;\r\n    }\r\n\r\n    this.moveBy(0, -1);\r\n  }\r\n\r\n  moveRight() {\r\n    if (!this.isFalling) {\r\n      return;\r\n    }\r\n\r\n    this.moveBy(0, 1);\r\n  }\r\n\r\n  rotateLeft(): boolean {\r\n    if (!this.isFalling) {\r\n      return false;\r\n    }\r\n\r\n    return this.reDraw(this.tetromino.rotateLeft());\r\n  }\r\n\r\n  rotateRight(): boolean {\r\n    if (!this.isFalling) {\r\n      return false;\r\n    }\r\n\r\n    return this.reDraw(this.tetromino.rotateRight());\r\n  }\r\n\r\n  lockObject() {\r\n    this.isFalling = false;\r\n  }\r\n}\r\n","import { FallingTetromino } from \"./FallingTetromino.js\";\nimport { Tetromino } from \"./Tetromino.js\";\n\nexport class Board {\n  width;\n  height;\n  grid: string[][];\n  activeObject?: FallingTetromino;\n  onClearLine?: (lineCount: number) => void;\n\n  constructor(width: number, height: number) {\n    this.width = width;\n    this.height = height;\n    this.grid = Array.from({ length: height }, () => Array(width).fill(\".\"));\n  }\n\n  cellAt(row: number, column: number) {\n    return this.grid[row][column];\n  }\n\n  drop(object: string | Tetromino) {\n    if (!this.activeObject || !this.activeObject.isFalling) {\n      this.activeObject = new FallingTetromino(this, object);\n    } else {\n      throw \"already falling\";\n    }\n  }\n\n  moveLeft() {\n    this.activeObject?.moveLeft();\n  }\n\n  moveRight() {\n    this.activeObject?.moveRight();\n  }\n\n  moveDown() {\n    this.activeObject?.moveDown();\n  }\n\n  private clearFullLines() {\n    let linesCleared = 0;\n    const newGrid = this.grid.filter((row) => row.some((cell) => cell === \".\"));\n\n    linesCleared = this.grid.length - newGrid.length;\n    if (!linesCleared) {\n      return;\n    }\n\n    while (newGrid.length < this.grid.length) {\n      newGrid.unshift(new Array(this.grid[0].length).fill(\".\"));\n    }\n\n    this.grid = newGrid;\n\n    if (this.onClearLine && linesCleared > 0) {\n      this.onClearLine(linesCleared);\n    }\n  }\n\n  private wallKickRotate(rotateFn: () => boolean | undefined) {\n    if (rotateFn()) {\n      return;\n    }\n\n    if (this.tryMoveAndRotate(0, -1, rotateFn) || this.tryMoveAndRotate(0, 1, rotateFn)) {\n      return;\n    }\n  }\n\n  private tryMoveAndRotate(dx: number, dy: number, rotateFn: () => boolean | undefined): boolean {\n    if (this.activeObject?.moveBy(dx, dy)) {\n      if (rotateFn()) {\n        return true;\n      }\n\n      this.activeObject.moveBy(-dx, -dy);\n    }\n    return false;\n  }\n\n  rotateLeft() {\n    this.wallKickRotate(() => this.activeObject?.rotateLeft());\n  }\n\n  rotateRight() {\n    this.wallKickRotate(() => this.activeObject?.rotateRight());\n  }\n\n  tick() {\n    if (this.activeObject && this.activeObject.isFalling) {\n      this.activeObject.moveDown();\n    } else {\n      this.clearFullLines();\n    }\n  }\n\n  hasFalling() {\n    return this.activeObject?.isFalling;\n  }\n\n  toString() {\n    return this.grid.map((row) => row.join(\"\")).join(\"\\n\") + \"\\n\";\n  }\n}\n","export class ScoringSystem {\r\n  score: number;\r\n  level: number;\r\n  totalLinesCleared: number;\r\n\r\n  linesCleared(lineCount: number) {\r\n    switch (lineCount) {\r\n      case 1:\r\n        this.score += 40 * (this.level + 1);\r\n        break;\r\n      case 2:\r\n        this.score += 100 * (this.level + 1);\r\n        break;\r\n      case 3:\r\n        this.score += 300 * (this.level + 1);\r\n        break;\r\n      case 4:\r\n        this.score += 1200 * (this.level + 1);\r\n        break;\r\n      default:\r\n        console.error(`Unexpected line count: ${lineCount}`);\r\n    }\r\n\r\n    this.totalLinesCleared += lineCount;\r\n    this.level = Math.min(10, Math.floor(this.totalLinesCleared / 10));\r\n  }\r\n\r\n  constructor(score = 0, level = 0, totalLinesCleared = 0) {\r\n    this.score = score;\r\n    this.level = level;\r\n    this.totalLinesCleared = totalLinesCleared;\r\n  }\r\n}\r\n","export class ShuffleBag<T> {\r\n  private items: T[];\r\n  private currentBag: T[];\r\n  private index: number;\r\n\r\n  constructor(items: T[]) {\r\n    this.items = [...items];\r\n    this.currentBag = [];\r\n    this.index = 0;\r\n  }\r\n\r\n  private shuffle() {\r\n    this.currentBag = [...this.items];\r\n    for (let i = this.currentBag.length - 1; i > 0; i--) {\r\n      const j = Math.floor(Math.random() * (i + 1));\r\n      [this.currentBag[i], this.currentBag[j]] = [this.currentBag[j], this.currentBag[i]];\r\n    }\r\n    this.index = 0;\r\n  }\r\n\r\n  next(): T {\r\n    if (this.index >= this.currentBag.length) {\r\n      this.shuffle();\r\n    }\r\n\r\n    return this.currentBag[this.index++];\r\n  }\r\n}\r\n","import { Board } from \"./Board.js\";\nimport { ScoringSystem } from \"./ScoringSystem.js\";\nimport { ShuffleBag } from \"./ShuffleBag.js\";\nimport { Tetromino } from \"./Tetromino.js\";\n\nclass Game {\n  columns: number;\n  rows: number;\n  tickDuration: number;\n  nextTick: number;\n\n  board: Board;\n  scoring: ScoringSystem;\n  tetrominoes: ShuffleBag<Tetromino>;\n\n  constructor(columns = 10, rows = 20, tickDuration = 1000) {\n    this.columns = columns;\n    this.rows = rows;\n    this.tickDuration = tickDuration;\n    this.nextTick = 0;\n\n    this.scoring = new ScoringSystem();\n    this.board = new Board(this.columns, this.rows);\n    this.tetrominoes = new ShuffleBag([\n      Tetromino.I_SHAPE,\n      Tetromino.T_SHAPE,\n      Tetromino.L_SHAPE,\n      Tetromino.J_SHAPE,\n      Tetromino.S_SHAPE,\n      Tetromino.Z_SHAPE,\n      Tetromino.O_SHAPE,\n    ]);\n\n    this.board.onClearLine = (lineCount) => {\n      this.scoring.linesCleared(lineCount);\n    };\n  }\n}\n\nfunction initGame() {\n  const canvas = document.getElementById(\"game\") as HTMLCanvasElement;\n\n  const game = new Game();\n\n  game.scoring = new ScoringSystem();\n  game.board = new Board(game.columns, game.rows);\n  game.board.onClearLine = (lineCount) => {\n    game.scoring?.linesCleared(lineCount);\n  };\n  game.tetrominoes = new ShuffleBag([\n    Tetromino.I_SHAPE,\n    Tetromino.T_SHAPE,\n    Tetromino.L_SHAPE,\n    Tetromino.J_SHAPE,\n    Tetromino.S_SHAPE,\n    Tetromino.Z_SHAPE,\n    Tetromino.O_SHAPE,\n  ]);\n\n  document.addEventListener(\"keydown\", (event) => {\n    if (event.code === \"Space\") {\n      for (let i = 0; i < game.rows; i++) {\n        game.board.moveDown();\n      }\n    } else if (event.key === \"z\") {\n      game.board.rotateLeft();\n    } else if (event.key === \"x\") {\n      game.board.rotateRight();\n    } else if (event.code === \"ArrowUp\") {\n      game.board.rotateRight();\n    } else if (event.code === \"ArrowDown\") {\n      game.board.moveDown();\n    } else if (event.code === \"ArrowLeft\") {\n      game.board.moveLeft();\n    } else if (event.code === \"ArrowRight\") {\n      game.board.moveRight();\n    } else {\n      return;\n    }\n    event.preventDefault(); // prevent game keys from scrolling the window\n  });\n\n  const render = (timestamp: number) => {\n    progressTime(game, timestamp);\n    renderGame(game, canvas, timestamp);\n    window.requestAnimationFrame(render);\n  };\n  window.requestAnimationFrame(render);\n}\n\n// game logic\n\nfunction progressTime(game: Game, timestamp: number) {\n  if (timestamp >= game.nextTick) {\n    tick(game);\n    adjustDifficulty(game);\n    game.nextTick = timestamp + game.tickDuration;\n  }\n}\n\nfunction tick(game: Game) {\n  game.board.tick();\n  if (!game.board.hasFalling()) {\n    game.board.drop(game.tetrominoes.next());\n  }\n}\n\nfunction adjustDifficulty(game: Game) {\n  const tickDuration = TICK_DURATION_PER_LEVEL[game.scoring.level];\n  if (tickDuration) {\n    game.tickDuration = tickDuration;\n  }\n}\n\nconst TICK_DURATION_PER_LEVEL: { [level: number]: number } = {\n  1: 33 * 15,\n  2: 33 * 13,\n  3: 33 * 11,\n  4: 33 * 9,\n  5: 33 * 7,\n  6: 33 * 5,\n  7: 33 * 4,\n  8: 33 * 3,\n  9: 33 * 2,\n  10: 33,\n};\n\n// rendering\n\nfunction renderGame(game: Game, canvas: HTMLCanvasElement, timestamp: number) {\n  const ctx = canvas.getContext(\"2d\");\n  if (!ctx) {\n    console.error(\"No ctx\");\n    return;\n  }\n  const canvasWidth = (canvas.width = canvas.clientWidth);\n  const canvasHeight = (canvas.height = canvas.clientHeight);\n  const cellWidth = canvasWidth / game.columns;\n  const cellHeight = canvasHeight / game.rows;\n\n  drawBackground(ctx, canvasWidth, canvasHeight);\n  for (let row = 0; row < game.rows; row++) {\n    for (let column = 0; column < game.columns; column++) {\n      const cell = game.board.cellAt(row, column);\n      drawCell(ctx, { cell, row, column, cellWidth, cellHeight });\n    }\n  }\n  drawScoring(ctx, {\n    level: game.scoring.level,\n    score: game.scoring.score,\n    canvasWidth,\n  });\n}\n\nfunction drawBackground(ctx: CanvasRenderingContext2D, canvasWidth: number, canvasHeight: number) {\n  ctx.fillStyle = \"#ffffff\";\n  ctx.fillRect(0, 0, canvasWidth, canvasHeight);\n}\n\nfunction drawCell(\n  ctx: CanvasRenderingContext2D,\n  {\n    cell,\n    row,\n    column,\n    cellWidth,\n    cellHeight,\n  }: { cell: string; row: number; column: number; cellWidth: number; cellHeight: number }\n) {\n  ctx.fillStyle = CELL_COLORS[cell];\n  const x = cellWidth * column;\n  const y = cellHeight * row;\n  ctx.fillRect(x, y, cellWidth, cellHeight);\n}\n\nconst CELL_COLORS: { [key: string]: string } = {\n  \".\": \"#ffffff\",\n  I: \"#cc1c19\",\n  T: \"#3a88b2\",\n  L: \"#c85c14\",\n  J: \"#312cc3\",\n  S: \"#921392\",\n  Z: \"#2e9915\",\n  O: \"#9a8016\",\n};\n\nfunction drawScoring(\n  ctx: CanvasRenderingContext2D,\n  { score, level, canvasWidth }: { score: number; level: number; canvasWidth: number }\n) {\n  const margin = 5;\n  const fontSize = 22;\n  drawText(ctx, {\n    text: `Level ${level}`,\n    x: margin,\n    y: fontSize + margin,\n    font: `${fontSize}px sans-serif`,\n  });\n  drawText(ctx, {\n    text: `Score ${score}`,\n    textAlign: \"right\",\n    x: canvasWidth - margin,\n    y: fontSize + margin,\n    font: `${fontSize}px sans-serif`,\n  });\n}\n\nfunction drawText(\n  ctx: CanvasRenderingContext2D,\n  { text, x, y, font, textAlign }: { text: string; x: number; y: number; font: string; textAlign?: CanvasTextAlign }\n) {\n  ctx.font = font;\n  ctx.textAlign = textAlign || \"left\";\n  ctx.fillStyle = \"#000000\";\n  ctx.fillText(text, x, y);\n}\n\ninitGame();\n","\n      window.onload = () => {\n        const audio = document.getElementById(\"background-audio\");\n        audio.volume = 0.4; // Set volume to 40%\n      };\n    "],"names":["Tetromino","grid","rotationIndex","__publicField","ITetromino","TTetromino","LTetromino","JTetromino","STetromino","ZTetromino","OTetromino","shape","row","newRotationIndex","_ITetromino","_TTetromino","_LTetromino","_JTetromino","_STetromino","_ZTetromino","FallingTetromino","board","tetromino","maxWidth","y","x","newTetromino","oldTetromino","commonPositions","deltaColumn","deltaRow","ignoreList","canMove","newColumnPos","newRowPos","rowDirection","cy","cx","x2","Board","width","height","column","object","_a","linesCleared","newGrid","cell","rotateFn","dx","dy","ScoringSystem","score","level","totalLinesCleared","lineCount","ShuffleBag","items","i","j","Game","columns","rows","tickDuration","initGame","canvas","game","event","render","timestamp","progressTime","renderGame","tick","adjustDifficulty","TICK_DURATION_PER_LEVEL","ctx","canvasWidth","canvasHeight","cellWidth","cellHeight","drawBackground","drawCell","drawScoring","CELL_COLORS","drawText","text","font","textAlign","audio"],"mappings":"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"}